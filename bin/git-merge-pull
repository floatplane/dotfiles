#!/usr/bin/ruby

# test for ruby

# use the git niceness
# https://www.kernel.org/pub/software/scm/git/docs/git-sh-setup.html
# https://coderwall.com/p/bt93ia

# jump to ruby?

# http://www.ruby-doc.org/stdlib-2.1.1/libdoc/optparse/rdoc/OptionParser.html
# http://octokit.github.io/octokit.rb/

# Save credentials
# https://github.com/geemus/netrc

# Make a gem for easy install?

# TARGET_BRANCH = "release/1.7.0"
TARGET_BRANCH = "develop"

begin
  require "octokit"
rescue LoadError
  puts "Octokit gem not found. Run:\n\n  gem install --user-install octokit\n\n"
  exit -1
end

require 'optparse'

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: example.rb [options]"

  opts.on("-v", "--[no-]verbose", "Run verbosely") do |v|
    options[:verbose] = v
  end
end.parse!

# p options
# p ARGV

# exit

# TODO
# - take a branch name
# - make sure local develop is up-to-date
# - make sure feature branch has been pushed to remote
# - make sure feature branch can be ff merged to develop
# - (http://stackoverflow.com/questions/15631890/how-to-achieve-git-no-ff-ff-only-which-is-not-allowed)
# - do no-ff merge from remote tracking branch to develop. this signals to Github that you're closing a PR
# - push local develop to remote (maybe prompt here? maybe do a git lola from origin/develop to develop so output can be verified?)
# - would be nice to get a list of pull requests/comment on which pull request is being closed.
# - push to develop can fail. trying to rebase the no-ff merge will lose it, so you have to reset local develop back to origin/develop and start again.

def run(cmd)
  puts cmd
  puts `#{cmd}`
  puts ''
  exit -1 if $? != 0
end

if ARGV.length < 3
  puts "Usage: #{File.basename($PROGRAM_NAME)} <PR_NUMBER> <LOCAL_BRANCH> <REMOTE_NAME>"
  exit -1
end

PR_NUMBER = ARGV[0]
LOCAL_BRANCH = ARGV[1]
REMOTE = ARGV[2]

run "git checkout #{TARGET_BRANCH}"
run "git pull"
run "git checkout #{LOCAL_BRANCH}"
run "git rebase #{TARGET_BRANCH}"
run "git push -f #{REMOTE}"
run "git checkout #{TARGET_BRANCH}"
run "git merge --no-ff #{REMOTE}/#{LOCAL_BRANCH} -m 'PR ##{PR_NUMBER}. Merge branch #{REMOTE}/#{LOCAL_BRANCH} into #{TARGET_BRANCH}.'"

# Print a log of the merge with branch structure visible. Jump through hoops to
# get the right branch to start the log revision range with. If origin/develop
# is a merge commit, we need the right parent of the merge.
#
# The goal is to get output like this:
#
# *   5be2a77 (HEAD, develop) PR #1269. Merge branch floatplane/feature/categories into develop.
# |\
# | * 2242141 (floatplane/feature/categories, feature/categories) Process CR feedback. Remove StaticCreatorListDataSource, will just rework Streamed* version to meet needs instead.
# | * d7cf231 Implement StaticCreatorListDataSource for categories, rename CreatorListDataSource => StreamedCreatorListDataSource
# | * ef034d0 Don't animate profile pic transitions when we're re-using a cell and needing to replace someone else's picture. Only animate from the blank thumbnail to an actual picture.
# | * 25cda8b Refactor CreatorListViewController.
# | * 682b7ba Adjust search dialog size and default position. Remove temp close button. Stub categories into search dialog.
# | * e8ba0b1 Rename CollaboratorsListViewController => CreatorListViewController. Add CollaboratorListViewController as a subclass of CreatorListViewController, will refactor behavior into it in future commits.
# | * e901256 Make dismissWithBackgroundTouch work for all CustomModalDialogs, even those that don't set useCustomPopover. Fix latent bug in ApplicationInfoNavigationController's implementation of the same.
# |/
# * 8d5ecbc (origin/develop, origin/HEAD) Merge branch 'feature/schemaUpgradeUtils' into develop
#
# where the log stops at origin/develop, no matter whether it's a merge commit or not.
#
origin_parent = `git rev-list --abbrev-commit --parents -n 1 origin/#{TARGET_BRANCH}`.split().last
run "git log --graph --decorate --pretty=oneline --abbrev-commit --color #{TARGET_BRANCH} #{origin_parent}..#{TARGET_BRANCH}"

puts "Run git push if you're happy with the merge"
puts "Run git reset --hard origin/#{TARGET_BRANCH} if you're not"
