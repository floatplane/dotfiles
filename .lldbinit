command regex rd 's/[[:space:]]*$/po [[[UIApplication sharedApplication] keyWindow] recursiveDescription]/' 's/.+$/po [%1 recursiveDescription]/'
settings set target.process.thread.step-avoid-regexp ^(std::(!function)|boost::shared_ptr)
command script import /usr/local/opt/chisel/libexec/fblldb.py

command alias sg -h "Dump the Paper scene graph." 'po [GetPaperViewController() printSceneNodeHierarchy]'

type category define -e FiftyThree -l objective-c++
type summary add --category FiftyThree --regex --cascade yes --summary-string "${var._Value}" "Property<.*>$"

type category define -e Eigen -l objective-c++

# Column vectors
type summary add --category Eigen --regex --cascade yes --summary-string "[${var.m_storage.m_data.array[0]}, ${var.m_storage.m_data.array[1]}]" "Eigen::Matrix<[a-zA-Z_]* *, *2, *1,[^>]*>$"
type summary add --category Eigen --regex --cascade yes --summary-string "[${var.m_storage.m_data.array[0]}, ${var.m_storage.m_data.array[1]}, ${var.m_storage.m_data.array[2]}]" "Eigen::Matrix<[a-zA-Z_]* *, *3, *1,[^>]*>$"
type summary add --category Eigen --regex --cascade yes --summary-string "[${var.m_storage.m_data.array[0]}, ${var.m_storage.m_data.array[1]}, ${var.m_storage.m_data.array[3]}, ${var.m_storage.m_data.array[3]}]" "Eigen::Matrix<[a-zA-Z_]* *, *4, *1,[^>]*>$"

# Row vectors
type summary add --category Eigen --regex --cascade yes --summary-string "[${var.m_storage.m_data.array[0]}, ${var.m_storage.m_data.array[1]}]" "Eigen::Matrix<[a-zA-Z_]* *, *1, *2,[^>]*>$"
type summary add --category Eigen --regex --cascade yes --summary-string "[${var.m_storage.m_data.array[0]}, ${var.m_storage.m_data.array[1]}, ${var.m_storage.m_data.array[2]}]" "Eigen::Matrix<[a-zA-Z_]* *, *1, *3,[^>]*>$"
type summary add --category Eigen --regex --cascade yes --summary-string "[${var.m_storage.m_data.array[0]}, ${var.m_storage.m_data.array[1]}, ${var.m_storage.m_data.array[3]}, ${var.m_storage.m_data.array[3]}]" "Eigen::Matrix<[a-zA-Z_]* *, *1, *4,[^>]*>$"

# Aligned box
type summary add --category Eigen --regex --cascade yes --summary-string "min=${var.m_min} max=${var.m_max}" "Eigen::AlignedBox<[a-zA-Z_]* *, *[2-4] *>$"
